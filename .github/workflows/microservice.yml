name: Deploy to AKS 1

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      VERSION: ${{ github.sha }}
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      REGISTRY_UN: ${{ secrets.REGISTRY_UN }}
      REGISTRY_PW: ${{ secrets.REGISTRY_PW }}

    steps:
      # 1. Checkout the code
      - uses: actions/checkout@v3
      
      # 2. Azure login using service principal (Authenticate with Azure)
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 3. Attach ACR to AKS (Ensure AKS can pull images from ACR)
      - name: Attach ACR to AKS
        run: az aks update -n sit722week92D151 -g sit722week92D151 --attach-acr sit722week92D151

      # 4. Login to ACR using secrets (Authenticate Docker to ACR)
      - name: Login to ACR
        run: |
          echo ${{ secrets.REGISTRY_PW }} | docker login ${{ env.CONTAINER_REGISTRY }} -u ${{ secrets.REGISTRY_UN }} --password-stdin

      # 5. Make build and push scripts executable
      - name: Make build-image.sh executable
        run: chmod +x ./scripts/build-image.sh
      - name: Make push-image.sh executable
        run: chmod +x ./scripts/push-image.sh
      - name: Make deploy.sh executable
        run: chmod +x ./scripts/deploy.sh

      # 6. Build Docker image
      - name: Build Docker Image
        run: ./scripts/build-image.sh

      # 7. Push Docker image to ACR
      - name: Push Docker Image
        run: ./scripts/push-image.sh

      # 8. Get AKS credentials (Configure kubectl to access the AKS cluster)
      - name: Getting AKS credentials
        run: |
          az aks get-credentials --resource-group sit722week92D151 --name sit722week92D151 --overwrite-existing

      # 9. Set up kubectl
      - uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
          kubectl-version: v1.30.2

      # 10. Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: ./scripts/deploy.sh

      # 11. Get the status of pods
      - name: Get Pods Status
        run: kubectl get pods -o wide

      # 12. Get the status of deployments
      - name: Get Deployments Status
        run: kubectl get deployments --all-namespaces=true -o wide

      # 13. Get the status of services
      - name: Get Services Status
        run: kubectl get services -o wide
