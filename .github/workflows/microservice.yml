name: Deploy to AKS

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      VERSION: ${{ github.sha }}
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      REGISTRY_UN: ${{ secrets.REGISTRY_UN }}
      REGISTRY_PW: ${{ secrets.REGISTRY_PW }}

    steps:
      # Checkout the code
      - uses: actions/checkout@v3

      # Set up Docker Buildx (optional for advanced builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Azure Container Registry
      - name: Log in to ACR
        run: echo ${{ secrets.REGISTRY_PW }} | docker login ${{ secrets.CONTAINER_REGISTRY }} -u ${{ secrets.REGISTRY_UN }} --password-stdin

      # Make the build-image.sh script executable
      - name: Make build-image.sh executable
        run: chmod +x ./scripts/build-image.sh 
        
      # Make the push-image.sh script executable
      - name: Make push-image.sh executable
        run: chmod +x ./scripts/push-image.sh

      # Make the deploy.sh script executable
      - name: Make deploy.sh executable
        run: chmod +x ./scripts/deploy.sh

      # Build Docker images
      - name: Build Docker Image
        run: ./scripts/build-image.sh ${{ github.sha }}
        
      # Push Docker images to ACR
      - name: Push Docker Image
        run: ./scripts/push-image.sh ${{ github.sha }}

      # Configure kubectl for deployment
      - name: Set up Kubernetes config
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      # Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: ./scripts/deploy.sh ${{ github.sha }}

      # Check the status of services in the cluster
      - name: Check service status
        run: kubectl get svc -o wide
